http://fcraft.fragmer.net/fCraftUpdater.exe
2010-06-28
410
 Implemented per-world access and build permissions.
 Changed worlds.txt format to worlds.xml. Your old worlds.txt file will be converted automatically.
 New world-related commands:
  /wmain changes the main world
  /waccess and /wbuild allow setting per-world permissions
  /wremove allows deleting worlds
  /wrename allows renaming worlds without reloading
 /wload command is significantly improved (see /help wload for more info). The functionality of the old /load command has been merged with /wload. Now /load is an alias for /join, together with /l, /j, and /goto.
 Removed SaveAndLoad permission - it became redundant with ManageWorlds. Please check your config to ensure that permissions remain consistent.
 Added new and previously-missing (/lockall, /unlockall, /where, /me, /rules, /setspawn) commands to /help.
 Disabled verify-names check for localhost (127.0.0.1) when running in Balanced mode.
 When player is denied access to some command, server now names the specific permission that's needed.
 Fixed a potential desync issue when one player rejoins a world, and another joins it simultaneously.
 Removed /genh command and /compass alias for the /where command.
 Added a fail-safe exception check when executing console commands. Now the server will stay up even if an exception occurs while executing console command.
 Improved the way server reacts to fatal errors on startup. Now there is a clear indication that server cannot start.
 "default map" is now referred to as "main world" for consistency. 
 Improved garbage collection.
405
 Added back support for vanilla (server_level.dat) maps.
 Fixed MCSharp importer leaving nonstandard blocks in the map, causing client crashes. Now all MCSharp-specific blocks are converted to normal types.
 Fixed visual player list not updating in fCraftUI.
 Added /players command to list ALL players on the server (in all worlds)
 Made the BlockType parameter optional for /cuboid and /ellipsoid. Now it takes blocktype of the second click (or last-previously-used-blocktype when using /mark) in the absence of the optional parameter.
 ConfigTool: Added a new tab for IRC setting.
 ConfigTool: Fixed a bug that prevented  the last 2 checkboxes on the permission list from being saved properly.
 IRC: Split IRCForwardAll into IRCForwardFromServer and IRCForwardFromIRC to make it easier to manage which messages you want to see.
 IRC: Added IRCBotQuitMsg to allow users to define their own quit message for the bot. 
 IRC: Fixed a bug with infinite reconnects on receiving error 433 Nickname already in use.
 Zones: Changed behavior of overlapping zones:
  - Before: To touch a block, AT LEAST ONE zone has to allow it
  - Now: To touch a block, ALL ZONES have to allow it
 Zones: Added /ztest command that lists all zones affecting a particular block. It can be used to detect and resolve zone overlaps.
 Zones: Added proper /help entries for /zone, /zones, /zremove, and /ztest, and contextual help for /zone and /zones.
 Zones: Made zone commands inaccessible from console (it would cause a crash, since zones are world-specific).
 Fixed OnPlayerDisconnected and OnPlayerListChanged sometimes firing at the wrong time.
 Added better error handling to Map.Save() in case the target file is not writable.
 Updated /help entries for /lock, /unlock, and /load commands.
404
 Fixed zone borders being off by 1 block.
 Fixed a rare crash on shutdown.
 Fixed heartbeat reporting incorrect port number to heartbeat if the port specified in config was not available.
 Adjusted default class permissions slightly, by popular demand:
 - regulars can now place Water and Lava
 - ops can now use draw commands
 IRC: Added a config option 'IRCMsgs' to toggle join/leave messages on/off. Default is disabled to prevent massive spam.
 IRC: Fixed a possible crash in IRCComm, related to static initializers.
 ConfigTool: Fixed many bugs in permission checkbox list.
 ConfigTool: Added visual editor for rules.txt
 ConfigTool: Added stub tab for IRC settings (coming soon).
403
 Fixed spawnpoint being read incorrectly when using /load.
 Added a note to ban*/unban* commands that's shown when player name is not found: "Use the FULL player name for ban/unban commands."
 Fixed a thread crash (not server-wide crash) in Session.IoLoop that can be caused by corrupted or malicious handshake packets.
 Fixed a potential crash when using /info on offline players from console.
 Fixed a potential crash when using /gen from console.
 Added more fail-safe checks that ensure that map spawn point is always within the map boundaries.
 Started logging IPs of connections that try sending corrupted or malicious handshake packets.
402
 Added back /load command, and hooked up MCC. Currenly supported: fCraft/fcm, MCSharp/lvl, indev/mclevel, MinerCPP and LuaCraft (dat). Vanilla support coming soon.
 Fixed worlds being unloaded before all block updates are processed (thus aborting draw commands).
 Fixed several potential multiworld-related crashes and freezes.
 Made Server.UnregisterPlayer check ALL worlds to remove the player, not just most recent one.
 IRC: Added an information message to notify users of the IRC Bot's online status when joining the server.
 IRC: Added the ability to send NOTICES.
 IRC: !status/!help can both be sent to the bot in channel now and it will respond appropriately.
 IRC: Added a check to see if the IRC Bot is actually enabled and online before sending a notification that it IS online.
 Drawing-related state is now reset when changing worlds.
 Added a limiter to the number of block updates that can be processed per tick (even if there are no players in a world). Fixes server becoming unresponsive when doing enormous drawing commands (millions of blocks).
 Allowed players to /join the world that they are already on.
401
 *IDLE/AFK CHECKING* This is configurable per-class.
 Added /version command, and added revision to the version string.
 Added an option parameter to /lock and /unlock to target a specific world, and added global /lockall and /unlockall commands. 
 Removed all references to the old pre-multiworld "map.fcm." Backups now work again. 
 Fixed players not spawning in the right place when changing worlds.
 IRC Bot will now handle terminations by the IRCd and restart itself upon any errors. 
 IRC Bot can now send from inside the server TO IRC! Use the prefix '#' in-game to send any message to IRC. Forwarding all server chat may be added if requested. To send from the bot to the server, use the bot's nickname and either ':', ',' or nothing, then your message.
 Improved performance of the IRC bot and the task scheduler.
 Fixed a bug with getting the server url from the externalurl.txt file crashing the IRC MessageHandler() when the file didn't exist. FORWARD_ALL is now enabled for both SERVER and IRC for 100% transparent chatting.
 Fixed a bug in the server-to-irc code that forwarded a blank message if there was nothing after '#' in server chat.
 Handshake packet is now written when doing /join, to replace MOTD with a more informative "Now loading [worldname]".
400
 *MULTIWORLD*. It's finally here. See /help for information on new commands: /worlds, /wload, /join
 Added a persistent world list, saved in worlds.txt - this is subject to change. The file contains a list of world names, each corresponding to an .fcm file. The first world listed at the top of worlds.txt is the default/main one.
 *IRC BOT*. Thanks to the efforts by Destroyer661, fCraft now has an optional IRC bot for relaying chat and commands.
 A field has been added in the config to allow forwarding ALL IRC CHANNEL TRAFFIC to the server. This will override the prefix and make it inactive. 'IRCBotForwardAll' is set to false by default.
 *ZONES*. It is now possible to make guest zones and op zones (and anything in-between) on any map. See /help for information on new commands: /zones, /zone, /zremove.
 Added 2 new permissions: ManageZones and ManageWorlds. You might need to update your config.xml to add these permissions to appropriate classes.
 Added /compass command (aka /where).
 Fixed players sometimes not seeing their /kick message.
 Added a way to teleport to specific coordinates (/tp x y h)
 Fixed heartbeats timing out when running fCraft under Mono.
 Fixed Config.ApplyConfig setting the wrong server throttling variables.
 Fixed air blocks appearing underwater when using /gen
 Tweaked /gen parameters to make "island" a bit less ugly.
 Updated text in fCraftConsole.
330
 Added /cuboid and /ellipsoid drawing commands.
 Improved memory usage.
 Added "Draw" permission, and made /draw check "DeleteAdmincrete" permission when replacing blocks, and removed unused "PlaceGlitchedSand" permission.
 Added "Port" and "BackupOnlyWhenChanged" config lines, and corresponding ConfigTool fields.
 Fixed bug that deleted ALL backups when you check "don't delete old backups." That was embarrassing.
325
 Added an experimental low-latency mode (faster server response, but more bandwidth required).
 Improved hacking detection: added anti-chat-spam and anti-grief (block spam) checks.
 New more aggressive anti-hacking checks for incoming movement and SetTile packets.
 Fixed an issue with fCraftUI console log getting truncated in the wrong places.
 Improved Mono compatibility (fixes HttpWebRequest failures).
324
 Added /me command.
 Added step stacking.
 Fixed a case where disconnected players would leave a ghost behind.
 Improved shutdown speed.
 Implemented ProcessPriority setting.
323
 Fixed players not being able to delete admincrete after promotion.
 Fixed a bug that allowed players to noclip into walls when using /tp or /bring.
 Fixed a security issue with "VerifyNames: Balanced"
 Added prototype of the security tab in ConfigTool (work in progress).
322
 Added a range check to Player.SetTile, to prevent certain types of grief bots.
 Fixed a bug where map spawnpoint did not change after doing /load.
 Fixed some typos.
321
 Fixed welcome messages not showing.
 Renamed /alias to /nick, and added a permission check.
320
 Finally last fix for the disconnect problem. Sorry about that.
319
 Quick fix for disconnect problem.
318
 Fixed VerifyNames not saving properly when using ConfigTool.
 Fixed several potential crashers in Session and World.
 Fixed a bug that sometimes wrongly showed "class name not recognized".
 Added class name autocompletion for class chat (@@classname blah)
 Started working on the new /load mode that allows loading different sized maps, and loading much faster (not done yet).
317
 Optimized handling of player movement and some block/tile updates, making servers more responsive and less laggy.
 Fixed a possible crash that sometimes happened when server has 1 slot left and 2 people tried to join at once.
 Fixed a case where a Session object was not properly disposed.
 Fixed resizing issue in UpdateWindow and reduced connection timeout in Updater
 Disabled ShowPrefixesInChat and ShowPrefixesInList by default (breaks skin support)
 Added Player.Send, a safe wrapper for Player.session.Send
 Fixed /tp, /bring, and /setspawn commands that were broken in the last revision.
 Fixed ConfigTool not saving "IsPublic" setting correctly.
316
 Added partial class-name matching for /class and /user commands.
 Fixed /banip and /banall not kicking the banned players immediately.
 Added /rules command. Create "rules.txt" in the server folder to specify.
 Fixed a bug where player movement sometimes got a little out of sync.
 Optimized /load speed a bit.
 Added nicer application icons.
315
 Added visual color picker to ConfigTool
 Added lightweight console interface for fCraft
 Refactored the main update loop
314
 Added AutomaticUpdates option.
 Integrated the color picker to ConfigTool.
 Improved hacking detection.
313
 Fixed a few glitches left after switching file formats.
 Improved memory usage when saving maps.
 Fixed an updater-related crash.
312
 New map format (FCM v2) should provide faster loading times.
 server_level.dat loader is now functional.
 Fixed possible crash if the default port was not available.
 Automatic updater should now work properly. More update options to come.
311
 Preview version of automatic updater.
310
 Cleaned up some VC# crapfiles.
 Added class prefixes and colors.
 Added PlaceWater and PlaceLava back to permissions.
 Fixed rank-limited permissions.
 Other assorted glitches fixed.
305
 removed config.xml from svn.
304
 More potential crashes fixed.
303
 Fixed a couple potential crashes in ConfigTool and Config.DefineClass
302
 Fixed a few minor ConfigTool bugs.
301
 Forgot to save config from World.cs after parsing. Minor update.
300
 ConfigTool finished. Note that some of the options do not have an effect yet.
